{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/firaschikhaoui/Desktop/react-native-hangman/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nTextInput;\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { StackNavigator, NavigationActions } from 'react-navigation';\nimport Svg, { Circle, Rect, G, Line } from 'react-native-svg';\nimport { Riddles } from \"./riddle/index\";\n\nvar GameScreen = function (_React$Component) {\n  _inherits(GameScreen, _React$Component);\n\n  var _super = _createSuper(GameScreen);\n\n  function GameScreen(props) {\n    var _this;\n\n    _classCallCheck(this, GameScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      \"answer\": \"\",\n      \"hint\": \"\",\n      \"correct\": 0,\n      \"wrong\": 0,\n      \"usedLetters\": [],\n      \"lettersLeft\": [],\n      \"input\": \"\",\n      \"score\": 0\n    };\n    _this.init = _this.init.bind(_assertThisInitialized(_this));\n    _this.riddle = new Riddles();\n    return _this;\n  }\n\n  _createClass(GameScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.init();\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var puzzle = this.puzzles.getRandom();\n      var answer = puzzle.answer.replace(/[^a-zA-Z]/gmi, \" \").trim();\n      var hint = puzzle.hint;\n      var lettersLeft = Array(answer.length);\n\n      for (var index = 0; index < answer.length; index++) {\n        lettersLeft[index] = answer[index] == \" \" ? \"*\" : \" \";\n      }\n\n      this.setState({\n        answer: answer,\n        hint: hint,\n        correct: 0,\n        wrong: 0,\n        usedLetters: [],\n        lettersLeft: lettersLeft,\n        input: \"\"\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(usedLetters, letter) {\n      var _this2 = this;\n\n      usedLetters.push(letter);\n      var correct = this.state.correct,\n          wrong = this.state.wrong,\n          answer = this.state.answer,\n          lettersLeft = this.state.lettersLeft,\n          score = this.state.score;\n\n      if (answer.toUpperCase().indexOf(letter) == -1) {\n        wrong++;\n\n        if (score > 0) {\n          score--;\n        }\n      } else {\n        answer.toUpperCase().split(\"\").map(function (value, index) {\n          if (value == letter) {\n            lettersLeft[index] = letter;\n            correct++;\n            score++;\n          }\n        });\n      }\n\n      if (lettersLeft.join(\"\").replace(/\\*/g, \" \").toUpperCase() == answer.toUpperCase()) {\n        Alert.alert('Du gewinnst', 'Sie haben die richtige Antwort erraten', [{\n          text: 'OK',\n          onPress: function onPress() {\n            return _this2.init();\n          }\n        }], {\n          cancelable: false\n        });\n      }\n\n      if (wrong > 4) {\n        Alert.alert('Du hast verloren', 'Antworten: ' + answer.toUpperCase() + \" \" + this.state.hint, [{\n          text: 'OK',\n          onPress: function onPress() {\n            return _this2.init();\n          }\n        }], {\n          cancelable: false\n        });\n      }\n\n      this.setState({\n        usedLetters: usedLetters,\n        correct: correct,\n        wrong: wrong,\n        lettersLeft: lettersLeft,\n        score: score\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rope = React.createElement(Line, {\n        x1: \"250\",\n        y1: \"0\",\n        x2: \"250\",\n        y2: \"120\",\n        stroke: \"#895917\",\n        strokeWidth: \"5\",\n        id: \"rope\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 16\n        }\n      });\n      var head = React.createElement(Circle, {\n        cx: \"250\",\n        cy: \"150\",\n        r: \"30\",\n        id: \"head\",\n        fill: \"#ecd2b7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 16\n        }\n      });\n      var bodyMain = React.createElement(Rect, {\n        width: \"10\",\n        height: \"100\",\n        x: \"245\",\n        y: \"150\",\n        id: \"bodyMain\",\n        fill: \"#ecd2b7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 20\n        }\n      });\n      var hands = React.createElement(G, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, React.createElement(Line, {\n        x1: \"250\",\n        y1: \"200\",\n        x2: \"220\",\n        y2: \"230\",\n        stroke: \"#ecd2b7\",\n        \"stroke-Linecap\": \"round\",\n        strokeWidth: \"10\",\n        id: \"handLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 20\n        }\n      }), React.createElement(Line, {\n        x1: \"250\",\n        y1: \"200\",\n        x2: \"280\",\n        y2: \"230\",\n        stroke: \"#ecd2b7\",\n        \"stroke-Linecap\": \"round\",\n        strokeWidth: \"10\",\n        id: \"handRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }\n      }));\n      var legs = React.createElement(G, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 16\n        }\n      }, React.createElement(Line, {\n        x1: \"250\",\n        y1: \"250\",\n        x2: \"230\",\n        y2: \"300\",\n        stroke: \"#ecd2b7\",\n        \"stroke-Linecap\": \"round\",\n        strokeWidth: \"10\",\n        id: \"legLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }), React.createElement(Line, {\n        x1: \"250\",\n        y1: \"250\",\n        x2: \"270\",\n        y2: \"300\",\n        stroke: \"#ecd2b7\",\n        \"stroke-Linecap\": \"round\",\n        strokeWidth: \"10\",\n        id: \"legRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 5\n        }\n      }));\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.scoreText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, \"Score: \", this.state.score), React.createElement(Svg, {\n        version: \"1.1\",\n        viewBox: \"0 0 500 500\",\n        preserveAspectRatio: \"xMinYMin meet\",\n        class: \"svg-content\",\n        width: \"200\",\n        height: \"250\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, React.createElement(Rect, {\n        fill: \"#053544\",\n        width: \"10\",\n        height: \"400\",\n        x: \"20\",\n        y: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }), React.createElement(Rect, {\n        fill: \"#053544\",\n        width: \"300\",\n        height: \"10\",\n        x: \"20\",\n        y: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }), React.createElement(Rect, {\n        fill: \"#053544\",\n        width: \"300\",\n        height: \"10\",\n        x: \"0\",\n        y: \"400\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }), this.state.wrong > 0 ? rope : null, this.state.wrong > 1 ? head : null, this.state.wrong > 2 ? bodyMain : null, this.state.wrong > 3 ? hands : null, this.state.wrong > 4 ? legs : null), this.renderDashes(), React.createElement(View, {\n        style: styles.hintContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.hintText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 44\n        }\n      }, \"Hint : \", this.state.hint)), this.renderKeyBoard());\n    }\n  }, {\n    key: \"renderDashes\",\n    value: function renderDashes() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.dashes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }\n      }, this.state.lettersLeft.map(function (letter, index) {\n        if (letter == \"*\") {\n          return React.createElement(View, {\n            style: styles.dashItemContainer,\n            key: index,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            style: styles.dashBlankItem,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 72\n            }\n          }, \"  \"));\n        } else {\n          return React.createElement(View, {\n            style: styles.dashItemContainer,\n            key: index,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 20\n            }\n          }, React.createElement(Text, {\n            style: styles.dashItem,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 71\n            }\n          }, letter));\n        }\n      }));\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(letter) {\n      var usedLetters = this.state.usedLetters;\n\n      if (usedLetters.indexOf(letter) == -1) {\n        this.validate(usedLetters, letter);\n      } else {\n        return;\n      }\n    }\n  }, {\n    key: \"renderKeyBoard\",\n    value: function renderKeyBoard() {\n      var _this4 = this;\n\n      var keysRows = [[\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"], [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"], [\" \", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \" \"]];\n      return React.createElement(View, {\n        style: styles.keyboard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      }, keysRows.map(function (keys, rowIndex) {\n        return React.createElement(View, {\n          key: rowIndex,\n          style: styles.keyboardRow,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }\n        }, keys.map(function (letter, index) {\n          if (letter == \" \") {\n            return React.createElement(Text, {\n              key: index,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 26\n              }\n            }, \" \");\n          } else if (_this4.state.usedLetters.indexOf(letter) != -1) {\n            return React.createElement(View, {\n              style: styles.keyItem,\n              key: index,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 26\n              }\n            }, React.createElement(Text, {\n              key: index,\n              style: styles.usedKey,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 67\n              }\n            }, letter));\n          } else {\n            return React.createElement(TouchableHighlight, {\n              onPress: _this4.onKeyPress.bind(_this4, letter),\n              style: styles.keyItem,\n              key: index,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 26\n              }\n            }, React.createElement(Text, {\n              style: styles.letter,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 99\n              }\n            }, letter));\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return GameScreen;\n}(React.Component);\n\nGameScreen.navigationOptions = {\n  title: 'Back'\n};\n\nvar HomeScreen = function (_React$Component2) {\n  _inherits(HomeScreen, _React$Component2);\n\n  var _super2 = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    _classCallCheck(this, HomeScreen);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var navigate = this.props.navigation.navigate;\n      var title = [\"H\", \"A\", \"N\", \"G\", \"M\", \"A\", \"N\"];\n      return React.createElement(View, {\n        style: styles.homeContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }\n      }, React.createElement(Svg, {\n        version: \"1.1\",\n        viewBox: \"0 0 500 500\",\n        preserveAspectRatio: \"xMinYMin meet\",\n        class: \"svg-content\",\n        width: \"250\",\n        height: \"250\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }, React.createElement(Rect, {\n        fill: \"#053544\",\n        width: \"10\",\n        height: \"400\",\n        x: \"20\",\n        y: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }), React.createElement(Rect, {\n        fill: \"#053544\",\n        width: \"300\",\n        height: \"10\",\n        x: \"20\",\n        y: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }), React.createElement(Rect, {\n        fill: \"#053544\",\n        width: \"300\",\n        height: \"10\",\n        x: \"0\",\n        y: \"400\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }), React.createElement(Line, {\n        x1: \"250\",\n        y1: \"0\",\n        x2: \"250\",\n        y2: \"120\",\n        stroke: \"#895917\",\n        strokeWidth: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }), React.createElement(Circle, {\n        cx: \"250\",\n        cy: \"150\",\n        r: \"30\",\n        fill: \"#ecd2b7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }), React.createElement(Rect, {\n        width: \"10\",\n        height: \"100\",\n        x: \"245\",\n        y: \"150\",\n        fill: \"#ecd2b7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }\n      }), React.createElement(Line, {\n        x1: \"250\",\n        y1: \"200\",\n        x2: \"220\",\n        y2: \"230\",\n        stroke: \"#ecd2b7\",\n        \"stroke-Linecap\": \"round\",\n        strokeWidth: \"10\",\n        id: \"handLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 73\n        }\n      }), React.createElement(Line, {\n        x1: \"250\",\n        y1: \"200\",\n        x2: \"280\",\n        y2: \"230\",\n        stroke: \"#ecd2b7\",\n        \"stroke-Linecap\": \"round\",\n        strokeWidth: \"10\",\n        id: \"handRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 187\n        }\n      }), React.createElement(Line, {\n        x1: \"250\",\n        y1: \"250\",\n        x2: \"230\",\n        y2: \"300\",\n        stroke: \"#ecd2b7\",\n        \"stroke-Linecap\": \"round\",\n        strokeWidth: \"10\",\n        id: \"legLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 302\n        }\n      }), React.createElement(Line, {\n        x1: \"250\",\n        y1: \"250\",\n        x2: \"270\",\n        y2: \"300\",\n        stroke: \"#ecd2b7\",\n        \"stroke-Linecap\": \"round\",\n        strokeWidth: \"10\",\n        id: \"legRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 415\n        }\n      })), React.createElement(View, {\n        style: styles.gameTitleView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }\n      }, title.map(function (titleItem, index) {\n        return React.createElement(Text, {\n          key: index,\n          style: styles.gameTitle,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 20\n          }\n        }, titleItem);\n      })), React.createElement(Button, {\n        onPress: function onPress() {\n          return navigate('GameRoute');\n        },\n        title: \"Jetzt Spielen\",\n        style: styles.startGameBtn,\n        accessibilityLabel: \"Klicken Sie hier, um das Spiel zu starten\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nHomeScreen.navigationOptions = {\n  title: 'VisionHealth Hangman Game'\n};\nvar HangmanGame = StackNavigator({\n  HomeRoute: {\n    screen: HomeScreen\n  },\n  GameRoute: {\n    screen: GameScreen\n  }\n});\n\nvar App = function (_React$Component3) {\n  _inherits(App, _React$Component3);\n\n  var _super3 = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(HangmanGame, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  homeContainer: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  gameTitleView: {\n    flexDirection: \"row\"\n  },\n  gameTitle: {\n    fontSize: 35,\n    borderBottomWidth: 1,\n    margin: 10\n  },\n  keyboard: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    flexDirection: \"column\"\n  },\n  keyboardRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  keyItem: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15,\n    margin: 2\n  },\n  usedKey: {\n    color: \"grey\",\n    fontSize: 20,\n    width: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  letter: {\n    color: \"black\",\n    fontSize: 20,\n    width: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  startGameBtn: {\n    color: '#841584',\n    fontSize: 25,\n    margin: 10\n  },\n  dashInputStyle: {\n    height: 40\n  },\n  dashes: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: 'center',\n    alignSelf: \"auto\",\n    justifyContent: 'center',\n    flexWrap: \"wrap\"\n  },\n  dashItemContainer: {\n    flex: 0,\n    padding: 5,\n    margin: 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  dashItem: {\n    width: 20,\n    color: '#841584',\n    fontSize: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: \"black\"\n  },\n  dashBlankItem: {\n    width: 20,\n    fontSize: 20\n  },\n  hintContainer: {\n    flexWrap: 'wrap',\n    alignItems: \"flex-start\",\n    padding: 10,\n    backgroundColor: \"lightgrey\"\n  },\n  hintText: {\n    fontSize: 18,\n    fontWeight: \"500\"\n  },\n  scoreText: {\n    fontSize: 13,\n    textAlign: \"right\",\n    fontWeight: \"500\",\n    justifyContent: \"flex-end\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/firaschikhaoui/Desktop/react-native-hangman/App.js"],"names":["React","TextInput","StackNavigator","NavigationActions","Svg","Circle","Rect","G","Line","Riddles","GameScreen","props","state","init","bind","riddle","puzzle","puzzles","getRandom","answer","replace","trim","hint","lettersLeft","Array","length","index","setState","correct","wrong","usedLetters","input","letter","push","score","toUpperCase","indexOf","split","map","value","join","Alert","alert","text","onPress","cancelable","rope","head","bodyMain","hands","legs","styles","container","scoreText","renderDashes","hintContainer","hintText","renderKeyBoard","dashes","dashItemContainer","dashBlankItem","dashItem","validate","keysRows","keyboard","keys","rowIndex","keyboardRow","keyItem","usedKey","onKeyPress","Component","navigationOptions","title","HomeScreen","navigate","navigation","homeContainer","gameTitleView","titleItem","gameTitle","startGameBtn","HangmanGame","HomeRoute","screen","GameRoute","App","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","flexDirection","fontSize","borderBottomWidth","margin","padding","color","width","dashInputStyle","height","alignSelf","flexWrap","borderBottomColor","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\n    TextInput\nimport { StyleSheet, Text, TextInput, View, Button, TouchableHighlight, Alert } from 'react-native';\nimport {\n  StackNavigator,NavigationActions\n} from 'react-navigation';\nimport Svg, { Circle, Rect ,G,Line} from 'react-native-svg';\nimport { Riddles } from './riddle/index';\n\nclass GameScreen extends React.Component {\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n      \"answer\":\"\",\n      \"hint\":\"\",\n      \"correct\":0,\n      \"wrong\":0,\n      \"usedLetters\":[],\n      \"lettersLeft\":[],\n      \"input\":\"\",\n      \"score\":0\n    }\n    this.init = this.init.bind(this);\n    this.riddle = new Riddles();\n  } \n  componentDidMount(){\n    this.init();\n  }\n  static navigationOptions = {\n    title: 'Back',\n  };\n  init(){\n    let puzzle = this.puzzles.getRandom();\n    let answer = puzzle.answer.replace(/[^a-zA-Z]/gmi, \" \").trim();\n    let hint = puzzle.hint;\n    let lettersLeft = Array(answer.length);\n    for(let index=0;index<answer.length;index++){\n      lettersLeft[index] = answer[index]==\" \"?\"*\":\" \";\n    }\n    this.setState({\n      answer:answer,\n      hint:hint,\n      correct:0,\n      wrong:0,\n      usedLetters:[],\n      lettersLeft:lettersLeft,\n      input:\"\"\n    });\n  }\n  validate(usedLetters,letter){\n    usedLetters.push(letter);\n    let correct = this.state.correct,\n      wrong = this.state.wrong,\n      answer = this.state.answer,\n      lettersLeft = this.state.lettersLeft,\n      score = this.state.score;\n    if(answer.toUpperCase().indexOf(letter)==-1){\n      wrong++;\n      if(score>0){\n        score --;\n      }\n    } else{\n      answer.toUpperCase().split(\"\").map((value,index)=>{\n        if(value==letter){\n          lettersLeft[index] = letter;\n          correct ++;\n          score++;\n        }\n      });\n    }\n    if(lettersLeft.join(\"\").replace(/\\*/g,\" \").toUpperCase() == answer.toUpperCase()){\n      Alert.alert(\n        'Du gewinnst',\n        'Sie haben die richtige Antwort erraten',\n        [\n          {text: 'OK', onPress: () => this.init()},\n        ],\n        { cancelable: false }\n      )\n    }\n    if(wrong>4){\n      Alert.alert(\n        'Du hast verloren',\n        'Antworten: '+answer.toUpperCase() +\" \"+this.state.hint,\n        [\n          {text: 'OK', onPress: () => this.init()},\n        ],\n        { cancelable: false }\n      )\n    }\n    this.setState({\n      usedLetters:usedLetters,\n      correct:correct,\n      wrong:wrong,\n      lettersLeft:lettersLeft,\n      score:score\n    });\n  }\n  render(){\n    let rope = <Line x1=\"250\" y1 = \"0\" x2=\"250\" y2 = \"120\" stroke=\"#895917\" strokeWidth=\"5\" id=\"rope\"/>;\n    let head = <Circle cx=\"250\" cy=\"150\" r=\"30\" id=\"head\" fill=\"#ecd2b7\"/>;\n    let bodyMain = <Rect width=\"10\" height=\"100\" x=\"245\" y=\"150\" id=\"bodyMain\" fill=\"#ecd2b7\"/>\n    let hands = <G><Line x1=\"250\" y1=\"200\" x2=\"220\" y2=\"230\" stroke=\"#ecd2b7\" stroke-Linecap=\"round\" strokeWidth=\"10\" id=\"handLeft\" />\n    <Line x1=\"250\" y1=\"200\" x2=\"280\" y2=\"230\" stroke=\"#ecd2b7\" stroke-Linecap=\"round\" strokeWidth=\"10\" id=\"handRight\"/></G>;\n    let legs = <G><Line x1=\"250\" y1=\"250\" x2=\"230\" y2=\"300\" stroke=\"#ecd2b7\" stroke-Linecap=\"round\" strokeWidth=\"10\" id=\"legLeft\"/>\n    <Line x1=\"250\" y1=\"250\" x2=\"270\" y2=\"300\" stroke=\"#ecd2b7\" stroke-Linecap=\"round\" strokeWidth=\"10\" id=\"legRight\"/></G>\n    return(\n      <View style={styles.container}>\n        <Text style={styles.scoreText}>Score: {this.state.score}</Text>\n        <Svg version=\"1.1\" viewBox=\"0 0 500 500\" preserveAspectRatio=\"xMinYMin meet\" class=\"svg-content\" width=\"200\" height=\"250\">\n        <Rect fill=\"#053544\" width=\"10\" height=\"400\" x=\"20\" y=\"0\" />\n        <Rect fill=\"#053544\" width=\"300\" height=\"10\" x=\"20\" y=\"0\" />\n        <Rect fill=\"#053544\" width=\"300\" height=\"10\" x=\"0\" y=\"400\" />\n        {this.state.wrong>0?rope:null}\n        {this.state.wrong>1?head:null}\n        {this.state.wrong>2?bodyMain:null}\n        {this.state.wrong>3?hands:null}\n        {this.state.wrong>4?legs:null}\n        </Svg>\n        {this.renderDashes()}\n        <View style={styles.hintContainer}><Text style={styles.hintText}>Hint : {this.state.hint}</Text></View>\n        {this.renderKeyBoard()}\n      </View>\n    )\n  }\n  renderDashes(){\n    return(\n      <View style={styles.dashes}>\n        {this.state.lettersLeft.map((letter,index)=>{\n          if(letter==\"*\"){\n            return (<View style={styles.dashItemContainer} key={index}><Text style={styles.dashBlankItem}>  </Text></View>)\n          }else{\n            return(<View style={styles.dashItemContainer} key={index}><Text style={styles.dashItem}>{letter}</Text></View>)\n          }\n        })}\n      </View>\n    )\n  }\n  onKeyPress(letter){\n    let usedLetters = this.state.usedLetters;\n    if(usedLetters.indexOf(letter)==-1){\n      this.validate(usedLetters,letter);\n    }else{\n      return;\n    }\n  }\n  renderKeyBoard(){\n    const keysRows = [\n      [\"Q\",\"W\",\"E\",\"R\",\"T\",\"Y\",\"U\",\"I\",\"O\",\"P\"],\n      [\"A\",\"S\",\"D\",\"F\",\"G\",\"H\",\"J\",\"K\",\"L\"],\n      [\" \",\"Z\",\"X\",\"C\",\"V\",\"B\",\"N\",\"M\",\" \"]]\n    return(\n      <View style={styles.keyboard}>\n        {keysRows.map((keys,rowIndex)=>{\n          return(\n            <View key={rowIndex} style={styles.keyboardRow}>\n              {keys.map((letter,index)=>{\n                if(letter==\" \"){\n                  return <Text key={index}> </Text>\n                }else if(this.state.usedLetters.indexOf(letter)!=-1){\n                  return <View style={styles.keyItem} key={index}><Text key={index} style={styles.usedKey}>{letter}</Text></View>\n                }else{\n                  return <TouchableHighlight\n                   onPress={this.onKeyPress.bind(this,letter)} style={styles.keyItem} key={index}><Text style={styles.letter}>{letter}</Text></TouchableHighlight>\n                }\n              })}\n            </View>\n          )\n        })}\n      </View>\n    )\n  }\n}\n\nclass HomeScreen extends React.Component {\n  static navigationOptions = {\n    title: 'VisionHealth Hangman Game',\n  };\n  render() {\n    const { navigate } = this.props.navigation;\n    let title = [\"H\",\"A\",\"N\",\"G\",\"M\",\"A\",\"N\"]\n    return (\n      <View style={styles.homeContainer}>\n        <Svg version=\"1.1\" viewBox=\"0 0 500 500\" preserveAspectRatio=\"xMinYMin meet\" class=\"svg-content\" width=\"250\" height=\"250\">\n          <Rect fill=\"#053544\" width=\"10\" height=\"400\" x=\"20\" y=\"0\" />\n          <Rect fill=\"#053544\" width=\"300\" height=\"10\" x=\"20\" y=\"0\" />\n          <Rect fill=\"#053544\" width=\"300\" height=\"10\" x=\"0\" y=\"400\" />\n          <Line x1=\"250\" y1 = \"0\" x2=\"250\" y2 = \"120\" stroke=\"#895917\" strokeWidth=\"5\"/>\n          <Circle cx=\"250\" cy=\"150\" r=\"30\" fill=\"#ecd2b7\" />\n          <Rect width=\"10\" height=\"100\" x=\"245\" y=\"150\" fill=\"#ecd2b7\"/><Line x1=\"250\" y1=\"200\" x2=\"220\" y2=\"230\" stroke=\"#ecd2b7\" stroke-Linecap=\"round\" strokeWidth=\"10\" id=\"handLeft\"/><Line x1=\"250\" y1=\"200\" x2=\"280\" y2=\"230\" stroke=\"#ecd2b7\" stroke-Linecap=\"round\" strokeWidth=\"10\" id=\"handRight\"/><Line x1=\"250\" y1=\"250\" x2=\"230\" y2=\"300\" stroke=\"#ecd2b7\" stroke-Linecap=\"round\" strokeWidth=\"10\" id=\"legLeft\"/><Line x1=\"250\" y1=\"250\" x2=\"270\" y2=\"300\" stroke=\"#ecd2b7\" stroke-Linecap=\"round\" strokeWidth=\"10\" id=\"legRight\"/>\n        </Svg>\n        <View style={styles.gameTitleView}>\n          {title.map((titleItem,index)=>{\n            return <Text key={index} style={styles.gameTitle}>{titleItem}</Text>\n          })}\n        </View>\n        <Button\n          onPress={() => navigate('GameRoute')}\n          title=\"Jetzt Spielen\"\n          style={styles.startGameBtn}\n          accessibilityLabel=\"Klicken Sie hier, um das Spiel zu starten\"\n        />\n      </View>\n    );\n  }\n}\nconst HangmanGame = StackNavigator({\n  HomeRoute: { screen: HomeScreen },\n  GameRoute: { screen: GameScreen }\n});\n\nexport default class App extends React.Component {\n  render() {\n    return <HangmanGame />;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  homeContainer: {\n    flex: 1,\n    flexDirection:\"column\",\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  gameTitleView:{\n    flexDirection:\"row\"\n  },\n  gameTitle:{\n    fontSize:35,\n    borderBottomWidth:1,\n    margin:10\n  },\n  keyboard: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    flexDirection:\"column\"\n  },\n  keyboardRow: {\n    flex: 1,\n    flexDirection:\"row\",\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  keyItem:{\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding:15,\n    margin:2\n  },\n  usedKey:{\n    color:\"grey\",\n    fontSize:20,\n    width:20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  letter:{\n    color:\"black\",\n    fontSize:20,\n    width:20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  startGameBtn: {\n    color: '#841584',\n    fontSize:25,\n    margin:10\n  },\n  dashInputStyle:{\n    height: 40, \n  },\n  dashes:{\n    flex: 1,\n    flexDirection:\"row\",\n    alignItems: 'center',\n    alignSelf:\"auto\",\n    justifyContent: 'center',\n    flexWrap:\"wrap\"\n  },\n  dashItemContainer:{\n    flex:0,\n    padding:5,\n    margin:2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dashItem:{\n    width:20,\n    color: '#841584',\n    fontSize:20,\n    borderBottomWidth:1,\n    borderBottomColor:\"black\"\n  },\n  dashBlankItem:{\n    width:20,\n    fontSize:20,\n  },\n  hintContainer:{\n    flexWrap: 'wrap',\n    alignItems: \"flex-start\",\n    padding:10,\n    backgroundColor:\"lightgrey\"\n  },\n  hintText:{\n    fontSize:18,\n    fontWeight:\"500\",\n  },\n  scoreText:{\n    fontSize:13,\n    textAlign:\"right\",\n    fontWeight:\"500\",\n    justifyContent:\"flex-end\",\n    width:\"100%\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}